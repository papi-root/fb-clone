{"version":3,"sources":["StateProvider.js","components/Header.js","firebase.js","Reducer.js","components/Login.js","components/SidebarRow.js","components/Sidebar.js","components/Story.js","components/StoryReel.js","axios.js","components/MessageSender.js","components/Post.js","components/Feed.js","App.js","serviceWorker.js","index.js","components/me.jpg","components/fb.jpg","components/bg1.jpeg","components/me2.jpg","components/bg2.jpeg","components/me3.jpg","components/bg3.jpeg"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Header","user","className","src","fb","alt","placeholder","type","fontSize","Avatar","photoURL","displayName","IconButton","auth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","GoogleAuthProvider","firestore","actionTypes","state","action","Login","dispatch","Button","onClick","signInWithPopup","then","result","console","log","catch","error","alert","message","SidebarRow","Icon","title","Sidebar","LocalHospitalIcon","EmojiFlagsIcon","PeopleIcon","ChatIcon","StoreFrontIcon","VideoLibraryIcon","ExpandMoreOutlinedIcon","Story","image","profileSrc","style","backgroundImage","StoryReel","bg1","me","bg2","me2","bg3","me3","instance","axios","create","baseURL","MessageSender","useState","input","setInput","setImageUrl","setImage","handleSubmit","e","a","preventDefault","imgForm","FormData","append","name","post","headers","_bundary","res","data","postData","text","imgName","filename","avatar","timestamps","Date","now","savePost","resp","onChange","target","files","color","Post","profilePic","userName","parseInt","toUTCString","pusher","Pusher","cluster","Feed","postsData","setPostsData","syncFeed","get","useEffect","subscribe","bind","map","entry","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"ggBAEaA,EAAeC,0BAEfC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,SAA1B,OACzB,kBAACL,EAAaM,SAAd,CAAuBC,MAAOC,qBAAWL,EAASC,IAC7CC,IAIII,EAAgB,kBAAMC,qBAAWV,IC+D/BW,G,MAtDA,WAAO,IAAD,EACYF,IADZ,mBACRG,EADQ,KACRA,KADQ,KAEjB,OAAQ,yBAAKC,UAAU,UACX,yBAAKA,UAAU,eACX,yBAAKC,IAAKC,IAAIC,IAAI,UAGtB,yBAAKH,UAAU,gBACX,kBAAC,IAAD,MACA,2BAAOI,YAAY,kBAAkBC,KAAK,UAG9C,yBAAKL,UAAU,iBACX,yBAAKA,UAAU,uCACX,kBAAC,IAAD,CAAUM,SAAS,WAEvB,yBAAKN,UAAU,+BACX,kBAAC,IAAD,CAAUM,SAAS,WAEvB,yBAAKN,UAAU,+BACX,kBAAC,IAAD,CAA2BM,SAAS,WAExC,yBAAKN,UAAU,+BACX,kBAAC,IAAD,CAAwBM,SAAS,WAErC,yBAAKN,UAAU,+BACX,kBAAC,IAAD,CAA0BM,SAAS,YAI3C,yBAAKN,UAAU,gBACX,yBAAKA,UAAU,eACX,kBAACO,EAAA,EAAD,CAAQN,IAAKF,EAAKS,WAClB,4BAAKT,EAAKU,cAEd,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,OAGJ,kBAACA,EAAA,EAAD,KACI,kBAAC,IAAD,OAGJ,kBAACA,EAAA,EAAD,KACI,kBAAC,IAAD,OAGJ,kBAACA,EAAA,EAAD,KACI,kBAAC,IAAD,W,kCCpDlBC,GAFcC,IAASC,cAXN,CACnBC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKNT,IAASD,QAChBW,EAAW,IAAIV,IAASD,KAAKY,mB,GACxBX,IAASY,Y,OCbPC,EACC,WAiBCnC,EAdC,SAACoC,EAAOC,GAEpB,OAAQA,EAAOtB,MACX,KAAKoB,EACD,OAAO,2BACAC,GADP,IAEI3B,KAAM4B,EAAO5B,OAGrB,QACI,OAAO2B,ICeJE,EA1BD,WAAO,IAAD,EACShC,IADT,mBACHiC,GADG,WAehB,OACI,yBAAK7B,UAAU,SACX,yBAAKA,UAAU,eACX,yBAAKC,IAAI,wHAAwHE,IAAI,cACrI,yBAAKF,IAAI,iIAAiIE,IAAI,aAElJ,kBAAC2B,EAAA,EAAD,CAAQzB,KAAK,SAAS0B,QAlBf,WACXpB,EAAKqB,gBAAgBV,GAChBW,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GAEZL,EAAS,CACLxB,KAAMoB,EACN1B,KAAMmC,EAAOnC,UAGlBsC,OAAM,SAAAC,GAAK,OAAIC,MAAMD,EAAME,cAQ9B,aCdGC,G,cAVI,SAAC,GAA0B,IAAxBxC,EAAuB,EAAvBA,IAAKyC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC7B,OACI,yBAAK3C,UAAU,cACVC,GAAO,kBAACM,EAAA,EAAD,CAAQN,IAAKA,IACpByC,GAAQ,kBAACA,EAAD,MACT,2BAAIC,M,oJCwBDC,GAlBC,WAAO,IAAD,EACWhD,IADX,mBACTG,EADS,KACTA,KADS,KAElB,OACI,yBAAKC,UAAU,WACX,kBAAC,EAAD,CAAYC,IAAKF,EAAKS,SAAUmC,MAAM,SACtC,kBAAC,EAAD,CAAYD,KAAMG,IAAmBF,MAAM,gCAC3C,kBAAC,EAAD,CAAYD,KAAMI,IAAgBH,MAAM,UACxC,kBAAC,EAAD,CAAYD,KAAOK,IAAYJ,MAAM,YACrC,kBAAC,EAAD,CAAYD,KAAMM,IAAUL,MAAM,cAClC,kBAAC,EAAD,CAAYD,KAAMO,KAAgBN,MAAM,gBACxC,kBAAC,EAAD,CAAYD,KAAMQ,KAAkBP,MAAM,WAC1C,kBAAC,EAAD,CAAYD,KAAMS,KAAwBR,MAAM,WCb7CS,I,OATD,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,WAAYX,EAAY,EAAZA,MAChC,OACI,yBAAKY,MAAO,CAAEC,gBAAgB,OAAD,OAASH,EAAT,MAAoBrD,UAAU,SACvD,kBAACO,EAAA,EAAD,CAAQN,IAAKqD,EAAYtD,UAAU,iBACnC,4BAAK2C,M,oGC2BFc,I,OAzBG,WAEd,OACI,yBAAKzD,UAAU,aACX,kBAAC,GAAD,CACIqD,MAAOK,KACPJ,WAAYK,KACZhB,MAAM,cAGV,kBAAC,GAAD,CACIU,MAAOO,KACPN,WAAYO,KACZlB,MAAM,mBAGV,kBAAC,GAAD,CACKU,MAAOS,KACPR,WAAYS,KACbpB,MAAM,kB,2GCtBPqB,G,QALEC,EAAMC,OAAO,CAE1BC,QAAS,2CC0GEC,GApGO,WAAO,IAAD,EACEC,mBAAS,IADX,mBACjBC,EADiB,KACVC,EADU,OAEQF,mBAAS,IAFjB,mBAEPG,GAFO,aAGEH,mBAAS,MAHX,mBAGjBhB,EAHiB,KAGVoB,EAHU,OAIK7E,IAJL,mBAIfG,EAJe,KAIfA,KAMH2E,GAVkB,KAUN,yCAAG,WAAOC,GAAP,kBAAAC,EAAA,sDACjBD,EAAEE,iBACCxB,IACOyB,EAAU,IAAIC,UACZC,OAAO,OAAQ3B,EAAOA,EAAM4B,MAEpChB,GAAMiB,KAAK,gBAAiBJ,EAAS,CACjCK,QAAS,CACL,OAAU,mBACV,kBAAmB,iBACnB,eAAe,gCAAf,OAAgDL,EAAQM,aAE7DnD,MAAK,SAAAoD,GACJlD,QAAQC,IAAIiD,EAAIC,MAEhB,IAAMC,EAAW,CACbC,KAAMlB,EACNmB,QAASJ,EAAIC,KAAKI,SAClB3F,KAAMA,EAAKU,YACXkF,OAAQ5F,EAAKS,SACboF,WAAYC,KAAKC,OAGrBC,EAASR,QAGPA,EAAW,CACbC,KAAMlB,EACNvE,KAAMA,EAAKU,YACXkF,OAAQ5F,EAAKS,SACboF,WAAYC,KAAKC,OAErBC,EAASR,IAEbf,EAAY,IACZD,EAAS,IACTE,EAAS,IApCQ,2CAAH,uDAuCZsB,EAAQ,yCAAG,WAAOR,GAAP,UAAAX,EAAA,sEACPX,GAAMiB,KAAK,eAAgBK,GAC5BtD,MAAK,SAAA+D,GACF7D,QAAQC,IAAI4D,MAHP,2CAAH,sDAMd,OACI,yBAAKhG,UAAU,iBACX,yBAAKA,UAAU,qBACX,kBAACO,EAAA,EAAD,CAAQN,IAAKF,EAAKS,WAClB,8BACI,2BACIH,KAAK,OACLL,UAAU,sBACVI,YAAY,wBAAwBV,MAAO4E,EAC3C2B,SAAW,SAACtB,GAAD,OAAOJ,EAASI,EAAEuB,OAAOxG,UAGxC,2BACIW,KAAK,OACLL,UAAU,6BACViG,SAjEC,SAACtB,GACfA,EAAEuB,OAAOC,MAAM,IACd1B,EAASE,EAAEuB,OAAOC,MAAM,OAkEhB,4BACApE,QAAS2C,EACTrE,KAAK,UAFL,qBAMR,yBAAKL,UAAU,wBACX,yBAAKA,UAAU,wBACX,kBAAC,KAAD,CAAcuD,MAAO,CAAE6C,MAAO,SAC9B,6CAGJ,yBAAKpG,UAAU,wBACX,kBAAC,KAAD,CAAkBuD,MAAO,CAAE6C,MAAO,WAClC,4CAGJ,yBAAKpG,UAAU,wBACX,kBAAC,KAAD,CAAmBuD,MAAO,CAAE6C,MAAO,YACnC,oD,yFC7CLC,GA/CF,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,WAAYb,EAA6C,EAA7CA,QAASc,EAAoC,EAApCA,SAAUX,EAA0B,EAA1BA,WAAYpD,EAAc,EAAdA,QACvD,OACI,yBAAKxC,UAAU,QACX,yBAAKA,UAAU,YACX,kBAACO,EAAA,EAAD,CAAQN,IAAKqG,EAAYtG,UAAU,gBACnC,yBAAKA,UAAU,gBACX,gCAAMuG,EAAN,KACA,2BAAI,IAAIV,KAAKW,SAASZ,IAAaa,iBAG3C,yBAAKzG,UAAU,eACX,2BAAIwC,IAGJiD,EACI,yBAAKzF,UAAU,cACX,yBAAKC,IAAG,4EAAuEwF,MAGnFtD,QAAQC,IAAI,8BAGpB,yBAAKpC,UAAU,gBACX,yBAAKA,UAAU,eACX,kBAAC,KAAD,MACA,sCAGJ,yBAAKA,UAAU,eACX,kBAAC,KAAD,MACA,yCAGJ,yBAAKA,UAAU,eACX,kBAAC,KAAD,MACA,uCAGJ,yBAAKA,UAAU,eACX,kBAAC,KAAD,MACA,kBAAC,KAAD,U,SC3Cd0G,GAAS,I,QAAIC,GAAO,uBAAwB,CAC9CC,QAAS,QA6CEC,GA1CF,WAAO,IAAD,EACqBxC,mBAAS,IAD9B,gCAEmBA,mBAAS,KAF5B,mBAERyC,EAFQ,KAEGC,EAFH,KAITC,EAAW,WACb/C,GAAMgD,IAAI,mBACLhF,MAAK,SAAAoD,GACF0B,EAAa1B,EAAIC,UAe7B,OAXA4B,qBAAU,WACUR,GAAOS,UAAU,SACzBC,KAAK,YAAY,SAAU9B,GAC/B0B,SAEL,IAEHE,qBAAU,WACNF,MACD,IAGC,yBAAKhH,UAAU,QACX,kBAAC,GAAD,MACA,kBAAC,GAAD,MAEI8G,EAAUO,KAAI,SAAAC,GAAK,OACf,kBAAC,GAAD,CACIhB,WAAYgB,EAAM3B,OAClBnD,QAAS8E,EAAM9B,KACfI,WAAY0B,EAAM1B,WAClBH,QAAS6B,EAAM7B,QACfc,SAAUe,EAAMvH,YCfzBwH,OArBf,WAAgB,IAAD,EACgB3H,IADhB,mBACJG,EADI,KACJA,KACT,OAFa,KAGX,yBAAKC,UAAU,OAEXD,EACE,oCACE,kBAAC,EAAD,MACA,yBAAKC,UAAU,YACb,kBAAC,GAAD,MACA,kBAAC,GAAD,QAIF,kBAAC,EAAD,QCVQwH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACG,kBAAC,EAAD,CAAexI,aZVQ,CACxBQ,KAAM,MYSsCT,QAASA,GACjD,kBAAC,GAAD,QAIN0I,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnG,MAAK,SAAAoG,GACJA,EAAaC,gBAEdjG,OAAM,SAAAC,GACLH,QAAQG,MAAMA,EAAME,a,mBEzI5B+F,EAAOC,QAAU,IAA0B,gC,mBCA3CD,EAAOC,QAAU,IAA0B,gC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.6dd56771.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react'\n\nexport const StateContext = createContext()\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\n        {children}\n    </StateContext.Provider>\n)\n\nexport const useStateValue = () => useContext(StateContext)","import React from 'react'; \r\nimport fb from './fb.jpg'; \r\nimport SearchIcon  from '@material-ui/icons/Search'; \r\nimport HomeIcon  from '@material-ui/icons/Home'; \r\nimport FlagIcon  from '@material-ui/icons/Flag'; \r\nimport SubscriptionsOutlinedIcon  from '@material-ui/icons/SubscriptionsOutlined'; \r\nimport StorefrontOutlinedIcon  from '@material-ui/icons/StorefrontOutlined'; \r\nimport SupervisedUserCircleIcon  from '@material-ui/icons/SupervisedUserCircle'; \r\n\r\nimport AddIcon  from '@material-ui/icons/Add'; \r\nimport ForumIcon  from '@material-ui/icons/Forum'; \r\nimport NotificationsActiveIcon  from '@material-ui/icons/NotificationsActive'; \r\nimport ExpandMoreIcon  from '@material-ui/icons/ExpandMore'; \r\n\r\nimport { Avatar, IconButton } from '@material-ui/core'; \r\nimport { useStateValue } from '../StateProvider'\r\nimport './Header.css';\r\n\r\n\r\nconst Header = () => {\r\n    const [{ user }, dispatch] = useStateValue()\r\n    return  <div className=\"header\"> \r\n                <div className=\"header_left\">\r\n                    <img src={fb} alt=\"papi\" />\r\n                </div>\r\n              \r\n                <div className=\"header_input\">\r\n                    <SearchIcon /> \r\n                    <input placeholder=\"search Fecebook\" type=\"text\" />\r\n                </div>\r\n\r\n                <div className=\"header_center\">\r\n                    <div className=\"header_option header_option--active\">\r\n                        <HomeIcon fontSize=\"large\" /> \r\n                    </div>\r\n                    <div className=\"header_option header_option\">\r\n                        <FlagIcon fontSize=\"large\" /> \r\n                    </div>\r\n                    <div className=\"header_option header_option\">\r\n                        <SubscriptionsOutlinedIcon fontSize=\"large\" /> \r\n                    </div>\r\n                    <div className=\"header_option header_option\">\r\n                        <StorefrontOutlinedIcon fontSize=\"large\" /> \r\n                    </div>\r\n                    <div className=\"header_option header_option\">\r\n                        <SupervisedUserCircleIcon fontSize=\"large\" /> \r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"header_right\">\r\n                    <div className=\"header_info\">\r\n                        <Avatar src={user.photoURL} /> \r\n                        <h4>{user.displayName}</h4>\r\n                    </div>\r\n                    <IconButton>\r\n                        <AddIcon /> \r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <ForumIcon /> \r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <NotificationsActiveIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <ExpandMoreIcon /> \r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n}\r\n\r\nexport default Header; ","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAka9LYC9tnzYPt6yLqHhPnTuCGTT9wttw\",\r\n    authDomain: \"fb-mern-8c134.firebaseapp.com\",\r\n    databaseURL: \"https://fb-mern-8c134.firebaseio.com\",\r\n    projectId: \"fb-mern-8c134\",\r\n    storageBucket: \"fb-mern-8c134.appspot.com\",\r\n    messagingSenderId: \"666041117578\",\r\n    appId: \"1:666041117578:web:804c4ad11ba26e36c73673\",\r\n    measurementId: \"G-L3BLL833PK\"\r\n}\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\r\n\r\nconst auth = firebase.auth()\r\nconst provider = new firebase.auth.GoogleAuthProvider()\r\nconst db = firebase.firestore() \r\n\r\nexport { auth, provider } \r\nexport default db ","export const initialState = {\n    user: null,\n}\n\nexport const actionTypes = {\n    SET_USER: 'SET_USER'\n}\n\nconst reducer = (state, action) => {\n   \n    switch (action.type) {\n        case actionTypes.SET_USER:\n            return {\n                ...state,\n                user: action.user\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default reducer","import { Button } from '@material-ui/core'\nimport React from 'react'\nimport './Login.css'\nimport { auth, provider } from '../firebase'\nimport { useStateValue } from '../StateProvider'\nimport { actionTypes } from '../Reducer'\n\nconst Login = () => {\n    const [user, dispatch] = useStateValue()\n\n    const signIn = () => {\n        auth.signInWithPopup(provider)\n            .then(result => {\n                console.log(result)\n\n                dispatch({\n                    type: actionTypes.SET_USER,\n                    user: result.user\n                })\n\n            }).catch(error => alert(error.message))\n    }\n    return (\n        <div className='login' >\n            <div className=\"login__logo\">\n                <img src=\"https://www.iconfinder.com/data/icons/social-messaging-ui-color-shapes-2-free/128/social-facebook-2019-circle-512.png\" alt=\"fb circle\" />\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/89/Facebook_Logo_%282019%29.svg/1280px-Facebook_Logo_%282019%29.svg.png\" alt=\"fb text\"/>\n            </div>\n            <Button type='submit' onClick={signIn}>Sign In</Button>\n        </div>\n    )\n}\n\nexport default Login\n","import React from 'react';\r\nimport { Avatar } from '@material-ui/core'; \r\nimport './SidebarRow.css'\r\n\r\nconst SidebarRow = ({ src, Icon, title }) => {\r\n    return (\r\n        <div className=\"sidebarRow\">\r\n            {src && <Avatar src={src} />}\r\n            {Icon && <Icon />}\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default SidebarRow; \r\n","import React from 'react'; \r\nimport './Sidebar.css'\r\nimport SidebarRow from './SidebarRow'\r\n\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital'\r\nimport EmojiFlagsIcon from '@material-ui/icons/EmojiFlags'\r\nimport PeopleIcon from '@material-ui/icons/People'\r\nimport ChatIcon from '@material-ui/icons/Chat'\r\nimport StoreFrontIcon from '@material-ui/icons/Store'\r\nimport VideoLibraryIcon from '@material-ui/icons/VideoLibrary'\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'\r\n//import { useStateValue } from '../SteProvider'\r\nimport avatar from './me.jpg'; \r\nimport { useStateValue } from '../StateProvider'\r\n\r\nconst Sidebar = () => {\r\n    const [{ user }, dispatch] = useStateValue()\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <SidebarRow src={user.photoURL} title=\"Papi\" /> \r\n            <SidebarRow Icon={LocalHospitalIcon} title=\"COVID-19 Information Center\"/>\r\n            <SidebarRow Icon={EmojiFlagsIcon} title=\"Pages\"/>\r\n            <SidebarRow Icon={ PeopleIcon} title=\"Friends\"/>\r\n            <SidebarRow Icon={ChatIcon} title=\"Messenger\"/>\r\n            <SidebarRow Icon={StoreFrontIcon} title=\"MarketPlace\"/>\r\n            <SidebarRow Icon={VideoLibraryIcon} title=\"Videos\"/>\r\n            <SidebarRow Icon={ExpandMoreOutlinedIcon} title=\"More\"/>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Sidebar; \r\n","import React from 'react'\r\nimport { Avatar } from '@material-ui/core'\r\nimport './Story.css'\r\n\r\nconst Story = ({ image, profileSrc, title }) => {\r\n    return (\r\n        <div style={{ backgroundImage: `url(${image})`}} className=\"story\">\r\n            <Avatar src={profileSrc} className=\"story_avatar\" /> \r\n            <h4>{title}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Story ","import React from 'react';\r\nimport Story from './Story';\r\nimport me from './me.jpg'\r\nimport bg1 from './bg1.jpeg'\r\nimport me2 from './me2.jpg'\r\nimport bg2 from './bg2.jpeg'\r\nimport me3 from './me3.jpg'\r\nimport bg3 from './bg3.jpeg'\r\nimport './StoryReel.css'\r\n\r\nconst StoryReel = () => {\r\n\r\n    return (\r\n        <div className=\"storyReel\">\r\n            <Story \r\n                image={bg1}\r\n                profileSrc={me}\r\n                title=\"Team Work\"\r\n            /> \r\n\r\n            <Story \r\n                image={bg2}\r\n                profileSrc={me2}\r\n                title=\"Web Developper\"\r\n            /> \r\n\r\n            <Story \r\n                 image={bg3}\r\n                 profileSrc={me3}\r\n                title=\"Mobile Dev\"\r\n            /> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StoryReel ","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    //baseURL: 'http://localhost:9000'\r\n    baseURL: ' https://papi-fb-backend.herokuapp.com'\r\n}) \r\n\r\nexport default instance ","import React, { useState } from 'react';\r\nimport me from './me.jpg'\r\nimport { Avatar } from '@material-ui/core'\r\nimport './MessageSender.css'\r\nimport VideocamIcon from '@material-ui/icons/Videocam'; \r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary'\r\nimport InserEmoticonIcon from '@material-ui/icons/InsertEmoticon'\r\nimport { useStateValue } from '../StateProvider'\r\nimport axios from '../axios'\r\n\r\nconst MessageSender = () => {\r\n    const [input, setInput] = useState('') \r\n    const [imageUrl, setImageUrl] = useState('') \r\n    const [image, setImage] = useState(null) \r\n    const [{ user }, dispatch] = useStateValue()\r\n    const handleChange = (e) => {\r\n        if(e.target.files[0]) {\r\n            setImage(e.target.files[0])\r\n        }\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        if(image) {\r\n            const imgForm = new FormData()\r\n            imgForm.append('file', image, image.name)\r\n\r\n            axios.post('/upload/image', imgForm, {\r\n                headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8', \r\n                    'Content-Type': `multipart/form-data; bundary=${imgForm._bundary}`\r\n                }\r\n            }).then(res => {\r\n                console.log(res.data)\r\n\r\n                const postData = {\r\n                    text: input,\r\n                    imgName: res.data.filename,\r\n                    user: user.displayName,\r\n                    avatar: user.photoURL,\r\n                    timestamps: Date.now()\r\n                } \r\n\r\n                savePost(postData)\r\n            })\r\n        } else {\r\n            const postData = {\r\n                text: input,\r\n                user: user.displayName,\r\n                avatar: user.photoURL,\r\n                timestamps: Date.now()\r\n            }\r\n            savePost(postData)\r\n        }\r\n        setImageUrl('')\r\n        setInput('')\r\n        setImage('')\r\n    }\r\n\r\n    const savePost = async (postData) => {\r\n        await axios.post('/upload/post', postData)\r\n            .then(resp => {\r\n                console.log(resp) \r\n            })\r\n    }\r\n    return (\r\n        <div className=\"messageSender\">\r\n            <div className=\"messageSender_top\">\r\n                <Avatar src={user.photoURL} />\r\n                <form>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"messageSender_input\" \r\n                        placeholder=\"What's on your mind ?\" value={input} \r\n                        onChange={ (e) => setInput(e.target.value)} \r\n                    /> \r\n                    \r\n                    <input \r\n                        type=\"file\" \r\n                        className=\"messageSender_fileSelector\" \r\n                        onChange={handleChange} \r\n                    /> \r\n\r\n                    <button \r\n                    onClick={handleSubmit} \r\n                    type=\"submit\"> Hidden Submit </button> \r\n                </form>\r\n            </div>\r\n\r\n            <div className=\"messageSender_bottom\">\r\n                <div className=\"messageSender_option\">\r\n                    <VideocamIcon style={{ color: 'red' }} /> \r\n                    <h3> Live Video </h3>\r\n                </div> \r\n\r\n                <div className=\"messageSender_option\">\r\n                    <PhotoLibraryIcon style={{ color: 'green' }} /> \r\n                    <h3>Photo/Video</h3>\r\n                </div>\r\n\r\n                <div className=\"messageSender_option\">\r\n                    <InserEmoticonIcon style={{ color: 'orange' }} /> \r\n                    <h3>Feeling/Activity</h3>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageSender ","import React from 'react' \r\nimport './Post.css'\r\nimport { Avatar } from '@material-ui/core'; \r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp'\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline'\r\nimport NearMeIcon from '@material-ui/icons/NearMe'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined'\r\nimport axios from '../axios'\r\n\r\nconst Post = ({ profilePic, imgName, userName, timestamps, message }) => {\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post_top\">\r\n                <Avatar src={profilePic} className=\"post_avatar\" /> \r\n                <div className=\"post_topInfo\">\r\n                    <h3> {userName} </h3>\r\n                    <p>{new Date(parseInt(timestamps)).toUTCString()}</p>\r\n                </div> \r\n            </div> \r\n            <div className=\"post_bottom\">\r\n                <p>{message}</p>\r\n            </div>\r\n            {\r\n                imgName ? (\r\n                    <div className=\"post_image\">\r\n                        <img src={`https://papi-fb-backend.herokuapp.com/retrieve/images/single?name=${imgName}`} />\r\n                    </div>\r\n                ) : (\r\n                    console.log('DEBUG ==>> no image here !')\r\n                )\r\n            }\r\n            <div className=\"post_options\">\r\n                <div className=\"post_option\">\r\n                    <ThumbUpIcon /> \r\n                    <p> Like </p>\r\n                </div> \r\n\r\n                <div className=\"post_option\">\r\n                    <ChatBubbleOutlineIcon /> \r\n                    <p> Comment </p>\r\n                </div> \r\n                \r\n                <div className=\"post_option\">\r\n                    <NearMeIcon /> \r\n                    <p> Share </p>\r\n                </div> \r\n                \r\n                <div className=\"post_option\">\r\n                    <AccountCircleIcon /> \r\n                    <ExpandMoreOutlinedIcon /> \r\n                </div>  \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post; ","import React, {useEffect, useState} from 'react'; \r\nimport StoryReel from './StoryReel'; \r\nimport MessageSender from './MessageSender'; \r\nimport Post from './Post'; \r\nimport axios from '../axios'\r\nimport Pusher from 'pusher-js'\r\n\r\nconst pusher = new Pusher('8155f633df76da20dd97', {\r\n    cluster: 'us3'\r\n})\r\n\r\nconst Feed = () => {\r\n    const [profilePic, setProfilePic] = useState('')\r\n    const [postsData, setPostsData] = useState([])\r\n\r\n    const syncFeed = () => {\r\n        axios.get('/retrieve/posts')\r\n            .then(res => {\r\n                setPostsData(res.data)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const channel = pusher.subscribe('posts')\r\n        channel.bind('inserted', function (data) {\r\n            syncFeed() \r\n        })\r\n    }, []) \r\n\r\n    useEffect(() => {\r\n        syncFeed()\r\n    }, []) \r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            <StoryReel /> \r\n            <MessageSender /> \r\n            {\r\n                postsData.map(entry => \r\n                    <Post \r\n                        profilePic={entry.avatar}\r\n                        message={entry.text}\r\n                        timestamps={entry.timestamps}\r\n                        imgName={entry.imgName}\r\n                        userName={entry.user}\r\n                    /> \r\n                )\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed ","import React from 'react';\nimport './App.css';\nimport Header from './components/Header'; \nimport Login from './components/Login';\nimport Sidebar from './components/Sidebar'; \nimport Feed from './components/Feed'; \nimport { useStateValue } from './StateProvider';\n\nfunction App() {\n  const [{ user }, dispatch] = useStateValue()\n  return (\n    <div className=\"app\">\n      {\n        user ? (\n          <>\n            <Header />\n            <div className=\"app_body\">\n              <Sidebar />\n              <Feed />\n            </div>\n          </>\n        ) : (\n            <Login />\n          )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './StateProvider';\nimport reducer, { initialState } from './Reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n     <StateProvider initialState={initialState} reducer={reducer}>\n        <App />\n      </StateProvider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/me.9bcb94c2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fb.a90268f0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg1.c3b68e5d.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/me2.c1f73371.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg2.005cde69.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/me3.19f02afe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg3.9420edd7.jpeg\";"],"sourceRoot":""}